name: Test and build Frontend

env:
  ROLE_TO_ASSUME: ${{ secrets.ROLE_TO_ASSUME }} 
  AWS_REGION: ${{ secrets.AWS_REGION }} 
  S3_BUCKET_FRONTEND: ${{ secrets.S3_BUCKET_FRONTEND }}                  
  CLOUDFRONT_DISTRIBUTION_ID_FRONTEND: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_FRONTEND }} 


on:
    push:
      branches:
        - main
      paths:
        - src/frontend/**

permissions:
  id-token: write
  pull-requests: write
  contents: read    # This is required for actions/checkout

jobs:
  build:
    name: Test, build and push 
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:

      - name: Checkout the repository to the runner 
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: Frontend-Build-GitHub

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23'

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./src/frontend/

      - name: Build frontend
        run: npm run build
        working-directory: ./src/frontend/

      # Remove all objects from S3 bucket before uploading new build
      - name: Clear S3 bucket
        run: aws s3 rm "s3://${{ env.S3_BUCKET_FRONTEND }}/" --recursive

      # Upload new build files to S3
      - name: Upload frontend to S3
        run: aws s3 sync ./src/frontend/build/ "s3://${{ env.S3_BUCKET_FRONTEND }}/" --delete

      # Invalidate CloudFront cache to ensure new files are served immediately
      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID_FRONTEND }} --paths "/*"


